user  nginx;
events {
  worker_connections   1000;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
              '$status $body_bytes_sent "$http_referer" '
              '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  keepalive_timeout  65;

  server {
    
      client_max_body_size 20M;
      large_client_header_buffers 4 32k;
      include /etc/nginx/mime.types;
      root   /usr/share/nginx/html;
      index  index.html index.htm;
    
    # Configuración para comprimir los archivos estáticos
    gzip on;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_proxied no-cache no-store private expired auth;
    gzip_min_length 1k;
    gzip_buffers    4 16k;
    gzip_comp_level 9;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;

      
      location ~* \.(?:manifest|appcache|html?|xml|json)$ {
      expires -1;
      # access_log logs/static.log; # I don't usually include a static log
      }

      # Media: images, icons, video, audio, HTC
      location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
      }

      location ~ \.css
      {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
        add_header Content-Type text/css;
      }

      location ~ \.js
      {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
        add_header Content-Type application/javascript;
      }

      location / {        
        if (!-e $request_filename){
          rewrite ^(.*)$ /index.html break;
        }
      }

      location /api/ {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_pass http://localhost:8080/;
      }

      location /health {
        return 200 "ok";
        add_header Content-Type text/plain;
      }
      listen 80;
  }
}